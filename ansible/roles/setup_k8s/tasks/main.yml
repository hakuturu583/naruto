---
- name: Check network connectivity
  ansible.builtin.uri:
    url: https://www.google.com
    timeout: 5
  register: network_check
  ignore_errors: true

- name: Fail if no network connectivity
  ansible.builtin.fail:
    msg: "No network connectivity. Please check your internet connection and proxy settings."
  when: network_check is failed

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  become: true
  register: apt_update_result
  ignore_errors: true

- name: Debug apt update result
  ansible.builtin.debug:
    var: apt_update_result
  when: apt_update_result is failed

- name: Install required packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: false  # Already updated above
  become: true

- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: true

- name: Add Kubernetes apt key (new method)
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: '0644'
  become: true

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present
    filename: kubernetes

- name: Install Kubernetes packages
  ansible.builtin.apt:
    name:
      - kubelet={{ kubernetes_version }}*
      - kubeadm={{ kubernetes_version }}*
      - kubectl={{ kubernetes_version }}*
    state: present
    update_cache: true

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Initialize Kubernetes master
  ansible.builtin.command:
    cmd: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
    creates: /etc/kubernetes/admin.conf
  when: node_type == "master"
  register: kubeadm_init

- name: Create .kube directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0755'
  when: node_type == "master"

- name: Copy admin.conf to user's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when: node_type == "master"

- name: Apply Calico CNI using kubernetes.core.k8s
  kubernetes.core.k8s:
    src: https://docs.projectcalico.org/manifests/calico.yaml
    state: present
    kubeconfig: "{{ ansible_env.HOME }}/.kube/config"
  when: node_type == "master"
  run_once: true
